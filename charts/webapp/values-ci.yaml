# Default values for devxp-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# --name is the github repository name of this application deploy
name: "ci"

global:
  # --cluster sets the Cluster Name
  cluster:
    name: ci-cluster
  # --imageRegistry sets the image registry, e.g., "000000000.dkr.ecr.eu-central-2.amazonaws.com/myapp"
  imageRegistry: "000000000.dkr.ecr.eu-central-2.amazonaws.com"
  commonLabels:
    cost-center: devops
    region: us-east-1
  env: dev
  prometheus:
    server: http://mimir-nginx.monitoring.svc:80/prometheus
  network:
    domain: my-company.com
  otel:
    endpoint: http://alloy.observability.svc.cluster.local
    port: 4317

# --image is the docker image configuration
image:
  # --image.tag is the image tag, e.g., a git sha or version number
  tag: "4cdd4ec"

commonLabels:
  environment: ci
  team: devops

actuator:
  enabled: false

resources:
  requests:
    cpu: 208m
    memory: 717Mi
  limits:
    memory: 717Mi

securityContext:
  fsGroup: 1000
  runAsUser: 1000

livenessProbe:
  enabled: true
  path: /v1/health
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 6

readinessProbe:
  enabled: true
  path: /v1/health
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

logging:
  podlogs:
    enabled: true
    pipelineStages:
      - cri: {}

monitoring:
  serviceMonitor:
    enabled: true
    extraPort:
      enabled: true

instrumentation:
  enabled: true
  language: nodejs

externalSecrets:
  enabled: true
  secrets:
    - FOO
    - BAR

extraContainer:
  enabled: true
  name: ci
  image: nginx:alpine
  imagePullPolicy: IfNotPresent
  env:
    - name: ENV_VAR
      value: "value"
  port:
    name: http-nginx
    containerPort: 8080
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "200m"
  volumeMounts:
    - name: ci
      mountPath: /etc/nginx/conf.d/nginx.conf
      subPath: nginx.conf

volumes:
  - name: ci
    type: configMap

configMaps:
  enabled: true
  data:
    nginx.conf: |
      # Cache zone
      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

      upstream frontend {
      server transaction-gateway-frontend;
      }

      server {
      listen 8080 default_server;

      server_name _;

      server_tokens off;

      gzip on;
      gzip_proxied any;
      gzip_comp_level 4;
      gzip_types text/css application/javascript image/svg+xml;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;

      location /_next/static {
      proxy_cache STATIC;
      proxy_pass http://frontend;
      }

      location /static {
      proxy_cache STATIC;
      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 60m;
      proxy_pass http://frontend;
      }

      # DYNAMIC ASSETS - NO CACHE
      location / {
      proxy_pass http://frontend;
      }
      }

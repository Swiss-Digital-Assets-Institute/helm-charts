# Default values for helm-ipfs-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

cluster:
  image:
    repository: ipfs/ipfs-cluster
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  nameOverride: ""
  podSecurityContext: {}
    # fsGroup: 2000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    storageClassName: ""
    volumeSize: ""  # "1Gi"

  service:
    type: ""

ipfs:
  image:
    repository: ipfs/go-ipfs
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is `latest`.
    tag: ""
  imagePullSecrets: []
  nameOverride: ""
  podSecurityContext: {}
    # fsGroup: 2000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    storageClassName: ""
    volumeSize: ""  # "1Gi"

  service:
    type: ClusterIP

fullnameOverride: ""

sharedSecret: ""

# Bootstrap configuration for joining existing IPFS Cluster
bootstrap:
  # Enable bootstrap mode to join an existing cluster
  enabled: false
  # List of bootstrap peer multiaddresses
  # Get these from existing cluster: kubectl exec <cluster-pod> -- ipfs-cluster-ctl id
  # Format: /ip4/<host>/tcp/9096/p2p/<peer-id>
  peers: []
  # Example:
  # peers:
  #   - /ip4/10.0.1.100/tcp/9096/p2p/QmExistingPeer1ABC123
  #   - /ip4/10.0.1.101/tcp/9096/p2p/QmExistingPeer2DEF456
  #   - /dns4/cluster.example.com/tcp/9096/p2p/QmExistingPeer3GHI789

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# `service.type` may be overridden by `cluster.service.type` and/or `ipfs.sercive.type`.
service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local



